# -*- mode: ruby -*-
# vi: set ft=ruby :

$num_nodes = 4
$ips = ["192.168.0.50", "192.168.0.51", "192.168.0.52", "192.168.0.53", "192.168.0.54", ]
$iface = "enp0s25"

$provision = <<-SCRIPT
apt-get update
apt-get install software-properties-common
add-apt-repository -y ppa:projectatomic/ppa
apt-get update

apt-get -y install cri-o-1.12
cp /vagrant/crio.conf /etc/crio/
systemctl start crio
systemctl enable crio

apt-get update && apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install --allow-unauthenticated -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl

echo 'KUBELET_EXTRA_ARGS="--node-ip=%{ip} --container-runtime=remote --container-runtime-endpoint=/var/run/crio/crio.sock --cgroup-driver=systemd"' > /etc/default/kubelet
systemctl daemon-reload
SCRIPT

$master_provision = <<-SCRIPT
kubeadm init --cri-socket=/var/run/crio/crio.sock --token=abcdef.0123456789abcdef --token-ttl=0 --pod-network-cidr=10.10.0.0/16 --apiserver-advertise-address=192.168.0.50
cp /etc/kubernetes/admin.conf /vagrant/
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null |    openssl dgst -sha256 -hex | sed 's/^.* //' > /vagrant/CA-sha
SCRIPT

$node_provision = <<-SCRIPT
kubeadm join 192.168.0.50:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:$(cat /vagrant/CA-sha)
SCRIPT

$bridge = <<-SCRIPT
modprobe overlay
modprobe br_netfilter
cat > /etc/sysctl.d/99-kubernetes-cri.conf <<EOF
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF
sysctl --system
SCRIPT

def routes(what)
  a = []
  (0..$num_nodes).each do |i|
    a[i] = "ip route add 10.10.#{i}.0/24 via #{$ips[i]}"
  end
  b = a.reject{|e| e=~ /#{what}/}
  return b.join("\n")
end

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
  end
  
  config.vm.define "master" do |master|
    ip = $ips[0]
    master.vm.network "public_network", ip: ip, bridge: $iface
    master.vm.hostname = "master"
    p = $provision + $master_provision
    p = p.% ip:ip
    master.vm.provision "shell", inline: $bridge, run: 'always'
    master.vm.provision "shell", inline: p
    master.vm.provision "shell", inline: routes(ip), run: 'always'
  end

  (1..$num_nodes).each do |i|
    config.vm.define "node#{i}" do |node|
      ip = $ips[i]
      node.vm.network "public_network", ip: ip, bridge: $iface
      node.vm.hostname = "node#{i}"
      p = $provision + $node_provision
      p = p.% ip:ip
      node.vm.provision "shell", inline: $bridge, run: 'always'
      node.vm.provision "shell", inline: p
      node.vm.provision "shell", inline: routes(ip), run: 'always'
    end
  end
end
